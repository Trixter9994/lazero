i think i need to know unicode-8 very fucking well.
but what is unicode-16?

I need a solution here.
First, decide the domain of a specific language.
Next filter out those with distinct domains.
For those with mixed domains, use google translate or just use wordnet.
And decide those remaining.

I want you to use your mother-fucking theory directly applied to these unicode data files.

I want the hierachy remained.

First, we might need to store all filesystem data to some supershitty list.

Humanity will never understand nature for the next billion years.

The hierachy tree stored in the neo4j is intended for better file management.

If the file were moved from here to there, then for sure that it's better to log this in cypher.

I suggest you to store something hedious inside the graphdb.

Analyse these files, and store the corresponding shit by utilizing id.

Now we are trying to find connection between different things.

If you want to fill in the blanks, it's just fine. But what we want to do here is to make connections. So we shall use our graphdb sometimes.

Maybe we should make it clear. We shall make the traditional db in use here.

besides, if you wanna find something that is similar to words looks in common, use deeeplearning. Train the module with most common characters, and then simply perform the work. You can also do this using other OCR tools. Fetch multiple fonts over different languages and if possible, the handwriting.

we need a list of all scannable files.
we need a list of all scannable names.
usually do not judge the thing by its name, because it will be very fucking wrong.
conclude the directory by the files under it, and we usually need a exhaustive list.

remember the conclusion is important because we need to find something in common here.

find the similar patterns.

also, multithreading can be applied using lua, system native support or just pure python.

I think grammarly could be used as text corrector here. BUT I NEED MY OWN TYPO CORRECTOR.

unicode-standard is relatively simpler than that horrible shit. So we shall do this first.
